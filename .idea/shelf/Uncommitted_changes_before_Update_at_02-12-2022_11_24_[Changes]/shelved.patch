Index: src/main/java/Database/Dto/ShiftDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Database.Dto;\r\n\r\nimport java.sql.Date;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\n\r\npublic class ShiftDTO\r\n{\r\n    // < Fields\r\n    public int shiftId; // * Shift id\r\n    public String date; // * When? (10-11-2022)\r\n    // * From when? (16:30)\r\n    public int fromHour;\r\n    public int fromMinute;\r\n    // * To when? (21:30)\r\n    public int toHour;\r\n    public int toMinute;\r\n    public int workerId; // * Who is working the shift?\r\n    public int breakAmount; // * How much break?\r\n    public int bossId; // * Who assigned the shift?\r\n\r\n\r\n    // < Constructors\r\n    public ShiftDTO(String date, int fromHour, int fromMinute, int toHour, int toMinute, int workerId, int breakAmount, int bossId)\r\n    {\r\n        this.date = date;\r\n        this.fromHour = fromHour;\r\n        this.fromMinute = fromMinute;\r\n        this.toHour = toHour;\r\n        this.toMinute = toMinute;\r\n        this.workerId = workerId;\r\n        this.breakAmount = breakAmount;\r\n        this.bossId = bossId;\r\n    }\r\n\r\n    public ShiftDTO(long vagtId, String date, int fromHour, int fromMinute, int toHour, int toMinute, int workerId, int breakAmount, int bossId)\r\n    {\r\n        this.shiftId = (int) vagtId;\r\n        this.date = date;\r\n        this.fromHour = fromHour;\r\n        this.fromMinute = fromMinute;\r\n        this.toHour = toHour;\r\n        this.toMinute = toMinute;\r\n        this.workerId = workerId;\r\n        this.breakAmount = breakAmount;\r\n        this.bossId = bossId;\r\n    }\r\n\r\n    // < ToString\r\n    @Override\r\n    public String toString()\r\n    {\r\n        return \"ShiftDTO{\" +\r\n                \"shiftId=\" + shiftId +\r\n                \", date='\" + date + '\\'' +\r\n                \", fromHour=\" + fromHour +\r\n                \", fromMinute=\" + fromMinute +\r\n                \", toHour=\" + toHour +\r\n                \", toMinute=\" + toMinute +\r\n                \", workerId=\" + workerId +\r\n                \", breakAmount=\" + breakAmount +\r\n                \", bossId=\" + bossId +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Database/Dto/ShiftDTO.java b/src/main/java/Database/Dto/ShiftDTO.java
--- a/src/main/java/Database/Dto/ShiftDTO.java	(revision ac287509eaa8626fcdfd66a6f475fc1692dcd87e)
+++ b/src/main/java/Database/Dto/ShiftDTO.java	(date 1669975637826)
@@ -62,4 +62,8 @@
                 ", bossId=" + bossId +
                 '}';
     }
+
+    public ShiftDTO() {
+
+    }
 }
Index: src/main/java/Server/Receiver/Implementations/Sender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Server.Receiver.Implementations;\r\n\r\nimport Server.Receiver.Implementations.MessageHeaders.MessageHeader;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.fasterxml.jackson.databind.ObjectWriter;\r\nimport com.rabbitmq.client.Channel;\r\nimport com.rabbitmq.client.Connection;\r\nimport com.rabbitmq.client.ConnectionFactory;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.concurrent.TimeoutException;\r\n\r\npublic class Sender {\r\n\r\n    private static Sender instance = new Sender();\r\n\r\n    private Sender() {}\r\n\r\n    public static Sender getInstance() {\r\n        if (instance == null) {\r\n            synchronized (Sender.class) {\r\n                if (instance == null) {\r\n                    instance = new Sender();\r\n                }\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public void send(MessageHeader payload) {\r\n        String queueName = payload.queue;\r\n        ConnectionFactory factory = new ConnectionFactory();\r\n        factory.setHost(\"localhost\");\r\n        try (Connection connection = factory.newConnection();\r\n             Channel channel = connection.createChannel()) {\r\n\r\n            channel.queueDeclare(queueName, false, false, false, null);\r\n\r\n            ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter();\r\n            String message = ow.writeValueAsString(payload);\r\n\r\n            channel.basicPublish(\"\", queueName, null, message.getBytes(StandardCharsets.UTF_8));\r\n            System.out.println(\"sended: \" + payload.toString());\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        } catch (TimeoutException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Server/Receiver/Implementations/Sender.java b/src/main/java/Server/Receiver/Implementations/Sender.java
--- a/src/main/java/Server/Receiver/Implementations/Sender.java	(revision ac287509eaa8626fcdfd66a6f475fc1692dcd87e)
+++ b/src/main/java/Server/Receiver/Implementations/Sender.java	(date 1669974675623)
@@ -40,8 +40,10 @@
             ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter();
             String message = ow.writeValueAsString(payload);
 
+            System.out.println(payload.queue);
+            System.out.println("sended: " + payload.payload.toString());
+
             channel.basicPublish("", queueName, null, message.getBytes(StandardCharsets.UTF_8));
-            System.out.println("sended: " + payload.toString());
         } catch (IOException e) {
             throw new RuntimeException(e);
         } catch (TimeoutException e) {
Index: src/main/java/Server/Receiver/Channels/Shift/CreateShift.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Server.Receiver.Channels.Shift;\r\n\r\nimport Database.Dto.ShiftDTO;\r\nimport Database.Dto.WorkerDTO;\r\nimport Database.Implementation.ShiftDao;\r\nimport Server.Receiver.Implementations.MessageHeaders.MessageHeader;\r\nimport Server.Receiver.Implementations.Sender;\r\nimport Server.Receiver.Interfaces.IQueue;\r\nimport Server.Receiver.MQConfig;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.fasterxml.jackson.databind.ObjectWriter;\r\nimport com.rabbitmq.client.Channel;\r\nimport com.rabbitmq.client.Connection;\r\nimport com.rabbitmq.client.ConnectionFactory;\r\nimport com.rabbitmq.client.DeliverCallback;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.Map;\r\nimport java.util.concurrent.TimeoutException;\r\n\r\npublic class CreateShift implements IQueue {\r\n\r\n    // < Fields\r\n    private String Queue;\r\n    private String Exchane;\r\n    private Connection connection;\r\n    private Channel channel;\r\n\r\n    private String URL;\r\n\r\n    private String action;\r\n    private boolean durable;\r\n    private boolean exclusive;\r\n    private boolean autoDelete;\r\n    private Map<String,Object> map;\r\n\r\n    public CreateShift(String queue, String exchane) {\r\n        MQConfig mqConfig = MQConfig.getInstance();\r\n\r\n        // ---------------------------------------------\r\n        action = \"CreateShift\";\r\n        // ---------------------------------------------\r\n\r\n        this.Queue = queue;\r\n        Exchane = exchane;\r\n\r\n        //from config\r\n        URL = mqConfig.getURL();\r\n        durable = mqConfig.isDurable();\r\n        exclusive = mqConfig.isExclusive();\r\n        autoDelete = mqConfig.isAutoDelete();\r\n        map = mqConfig.getMap();\r\n\r\n        try {\r\n            ConnectionFactory factory = new ConnectionFactory();\r\n            factory.setHost(URL);\r\n            connection = factory.newConnection();\r\n            channel = connection.createChannel();\r\n\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        } catch (TimeoutException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public String GetQueue() {\r\n        return Queue;\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        int count = 0;\r\n\r\n        try {\r\n            count = channel.queueDeclarePassive(Queue).getMessageCount();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n        while (count != 0) {\r\n            count--;\r\n            try {\r\n                ConnectionFactory factory = new ConnectionFactory();\r\n                factory.setHost(URL);\r\n                Connection connection = factory.newConnection();\r\n                Channel channel = connection.createChannel();\r\n\r\n                channel.queueDeclare(Queue, durable, exclusive, autoDelete, map);\r\n\r\n                DeliverCallback deliverCallback = (consumerTag, delivery) -> {\r\n                    String message = new String(delivery.getBody(), StandardCharsets.UTF_8);\r\n\r\n                    // Json med info til at lave messageHeader => obj af messageHeader\r\n                    ObjectMapper mapper = new ObjectMapper();\r\n                    MessageHeader messageHeader = mapper.readValue(message,MessageHeader.class);\r\n\r\n                    // payload er i \"Test\" => Json\r\n                    ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter();\r\n\r\n                    // Json => string\r\n                    String Payload = ow.writeValueAsString(messageHeader.payload);\r\n\r\n                    //---------------------------------------------\r\n                    //string => object\r\n                    Object object = mapper.readValue(Payload, ShiftDTO.class);\r\n\r\n                    System.out.println(object);\r\n                    //cast til det object der skal bruges\r\n                    ShiftDTO shift = (ShiftDTO) object;\r\n\r\n                    System.out.println(shift.toString());\r\n                    //skriv til dao/DB\r\n                    ShiftDao shiftDao = ShiftDao.getInstance();\r\n                    shiftDao.CreateShift(shift);\r\n\r\n                    Sender sender = Sender.getInstance();\r\n                    sender.send(new MessageHeader(messageHeader.getQueue(), action, shift));\r\n                    //---------------------------------------------\r\n                };\r\n                channel.basicConsume(Queue, true, deliverCallback, consumerTag -> {\r\n                });\r\n            } catch (IOException | TimeoutException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Server/Receiver/Channels/Shift/CreateShift.java b/src/main/java/Server/Receiver/Channels/Shift/CreateShift.java
--- a/src/main/java/Server/Receiver/Channels/Shift/CreateShift.java	(revision ac287509eaa8626fcdfd66a6f475fc1692dcd87e)
+++ b/src/main/java/Server/Receiver/Channels/Shift/CreateShift.java	(date 1669975637835)
@@ -3,6 +3,7 @@
 import Database.Dto.ShiftDTO;
 import Database.Dto.WorkerDTO;
 import Database.Implementation.ShiftDao;
+import Database.Implementation.WorkerDao;
 import Server.Receiver.Implementations.MessageHeaders.MessageHeader;
 import Server.Receiver.Implementations.Sender;
 import Server.Receiver.Interfaces.IQueue;
@@ -117,8 +118,10 @@
                     ShiftDao shiftDao = ShiftDao.getInstance();
                     shiftDao.CreateShift(shift);
 
+                    ShiftDTO shiftDTOCreated = shiftDao.getBySearchParameters(shift.date, WorkerDao.getInstance().GetWorker(shift.workerId).getFullname()).get(0);
+
                     Sender sender = Sender.getInstance();
-                    sender.send(new MessageHeader(messageHeader.getQueue(), action, shift));
+                    sender.send(new MessageHeader(messageHeader.getQueue(), action, shiftDTOCreated));
                     //---------------------------------------------
                 };
                 channel.basicConsume(Queue, true, deliverCallback, consumerTag -> {
Index: src/main/java/Server/Receiver/Channels/Worker/GetWorkerById.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Server.Receiver.Channels.Worker;\r\n\r\nimport Database.Dto.WorkerDTO;\r\nimport Database.Implementation.WorkerDao;\r\nimport Server.Receiver.Implementations.MessageHeaders.MessageHeader;\r\nimport Server.Receiver.Implementations.Sender;\r\nimport Server.Receiver.Interfaces.IQueue;\r\nimport Server.Receiver.MQConfig;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.fasterxml.jackson.databind.ObjectWriter;\r\nimport com.rabbitmq.client.Channel;\r\nimport com.rabbitmq.client.Connection;\r\nimport com.rabbitmq.client.ConnectionFactory;\r\nimport com.rabbitmq.client.DeliverCallback;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.Map;\r\nimport java.util.concurrent.TimeoutException;\r\n\r\npublic class GetWorkerById implements IQueue {\r\n    private String Queue;\r\n    private String Exchane;\r\n    private Connection connection;\r\n    private Channel channel;\r\n\r\n    private String URL;\r\n\r\n    private String action;\r\n    private boolean durable;\r\n    private boolean exclusive;\r\n    private boolean autoDelete;\r\n    private Map<String,Object> map;\r\n\r\n    public GetWorkerById(String queue, String exchane) {\r\n        MQConfig mqConfig = MQConfig.getInstance();\r\n\r\n        // ---------------------------------------------\r\n        action = \"GetWorkerById\";\r\n        // ---------------------------------------------\r\n\r\n        this.Queue = queue;\r\n        Exchane = exchane;\r\n\r\n        //from config\r\n        URL = mqConfig.getURL();\r\n        durable = mqConfig.isDurable();\r\n        exclusive = mqConfig.isExclusive();\r\n        autoDelete = mqConfig.isAutoDelete();\r\n        map = mqConfig.getMap();\r\n\r\n        try {\r\n            ConnectionFactory factory = new ConnectionFactory();\r\n            factory.setHost(URL);\r\n            connection = factory.newConnection();\r\n            channel = connection.createChannel();\r\n\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        } catch (TimeoutException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public String GetQueue() {\r\n        return Queue;\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        int count = 0;\r\n\r\n        try {\r\n            count = channel.queueDeclarePassive(Queue).getMessageCount();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n        while (count != 0) {\r\n            count--;\r\n            try {\r\n                ConnectionFactory factory = new ConnectionFactory();\r\n                factory.setHost(URL);\r\n                Connection connection = factory.newConnection();\r\n                Channel channel = connection.createChannel();\r\n\r\n                channel.queueDeclare(Queue, durable, exclusive, autoDelete, map);\r\n\r\n                DeliverCallback deliverCallback = (consumerTag, delivery) -> {\r\n                    String message = new String(delivery.getBody(), StandardCharsets.UTF_8);\r\n\r\n                    // Json med info til at lave messageHeader => obj af messageHeader\r\n                    ObjectMapper mapper = new ObjectMapper();\r\n                    MessageHeader messageHeader = mapper.readValue(message,MessageHeader.class);\r\n\r\n                    // payload er i \"Test\" => Json\r\n                    ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter();\r\n\r\n                    // Json => string\r\n                    String Payload = ow.writeValueAsString(messageHeader.payload);\r\n\r\n                    //string => object\r\n                    System.out.println(\"test\");\r\n                    Object object = mapper.readValue(Payload, Integer.class);\r\n\r\n                    //---------------------------------------------\r\n                    //cast til det object der skal bruges\r\n                    int workerId = (int) object;\r\n\r\n                    //skriv til dao/DB\r\n                    WorkerDao workerDao = WorkerDao.getInstance();\r\n                    WorkerDTO workerDTO = workerDao.GetWorker(workerId);\r\n\r\n\r\n                    Sender sender = Sender.getInstance();\r\n                    sender.send(new MessageHeader(messageHeader.getQueue(), action, workerDTO));\r\n                    //---------------------------------------------\r\n                };\r\n                channel.basicConsume(Queue, true, deliverCallback, consumerTag -> {\r\n                });\r\n            } catch (IOException | TimeoutException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Server/Receiver/Channels/Worker/GetWorkerById.java b/src/main/java/Server/Receiver/Channels/Worker/GetWorkerById.java
--- a/src/main/java/Server/Receiver/Channels/Worker/GetWorkerById.java	(revision ac287509eaa8626fcdfd66a6f475fc1692dcd87e)
+++ b/src/main/java/Server/Receiver/Channels/Worker/GetWorkerById.java	(date 1669973571111)
@@ -102,7 +102,6 @@
                     String Payload = ow.writeValueAsString(messageHeader.payload);
 
                     //string => object
-                    System.out.println("test");
                     Object object = mapper.readValue(Payload, Integer.class);
 
                     //---------------------------------------------
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_19\" default=\"true\" project-jdk-name=\"18\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision ac287509eaa8626fcdfd66a6f475fc1692dcd87e)
+++ b/.idea/misc.xml	(date 1669975466645)
@@ -7,5 +7,5 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="18" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" default="true" project-jdk-name="18" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b797422-55a4-4c7b-bbd8-3d842e38230a\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.gitignore\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/Dto/ShiftDTO.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/Dto/ShiftDTO.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/Dto/WorkerDTO.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/Dto/WorkerDTO.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/Implementation/ShiftDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/Implementation/ShiftDao.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/Implementation/WorkerDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/Implementation/WorkerDao.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/Interfaces/IShiftDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/Interfaces/IShiftDao.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/Interfaces/IWorkerDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/Interfaces/IWorkerDao.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/entity/ShiftsEntity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/entity/ShiftsEntity.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/entity/WorkerEntity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/entity/WorkerEntity.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/test/ShiftDaoTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/test/ShiftDaoTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/test/WorkerDaoTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/test/WorkerDaoTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Database/util/EntityConverter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Database/util/EntityConverter.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/CreateShift.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/CreateShift.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/EditShift.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/EditShift.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/GetShiftById.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/GetShiftById.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/RemoveShift.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/RemoveShift.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Worker/CreateWorker.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Worker/CreateWorker.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"c24e5a5a-633c-42b1-825d-42072ef119cf\" />\r\n        <option name=\"url\" value=\"https://github.com/MalasataXD/SEP3-Java.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2ILm9C34latHxp9CKPcMmBlvbRq\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"showMembers\" value=\"true\" />\r\n    <option name=\"showVisibilityIcons\" value=\"true\" />\r\n    <option name=\"sortByType\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"project.structure.last.edited\": \"Problems\",\r\n    \"project.structure.proportion\": \"0.0\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.WorkerDaoTest\">\r\n    <configuration name=\"ShiftDaoTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Database.test.ShiftDaoTest\" />\r\n      <module name=\"SEP3\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Database.test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"WorkerDaoTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Database.test.WorkerDaoTest\" />\r\n      <module name=\"SEP3\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Database.test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.WorkerDaoTest\" />\r\n        <item itemvalue=\"Application.ShiftDaoTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b797422-55a4-4c7b-bbd8-3d842e38230a\" name=\"Changes\" comment=\"\" />\r\n      <created>1669969083755</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1669969083755</updated>\r\n      <workItem from=\"1669969085017\" duration=\"24000\" />\r\n      <workItem from=\"1669969118683\" duration=\"175000\" />\r\n      <workItem from=\"1669969296056\" duration=\"1046000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ac287509eaa8626fcdfd66a6f475fc1692dcd87e)
+++ b/.idea/workspace.xml	(date 1669976668463)
@@ -4,27 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="8b797422-55a4-4c7b-bbd8-3d842e38230a" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" />
+    <list default="true" id="3cf24cbd-2f25-49c3-b1f4-7e01252d6f3b" name="Changes" comment="Fixed/Tested channel: &#10;1. CreateShift.java&#10;2. EditShift.java&#10;3. EditWorker.java&#10;4. CreateWorker.java&#10;5. RemoveShift.java&#10;6. RemoveWorker.java&#10;&#10;Added breakAmount to dao">
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/uiDesigner.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Database/Dto/ShiftDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/Dto/ShiftDTO.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/Dto/WorkerDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/Dto/WorkerDTO.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/Implementation/ShiftDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/Implementation/ShiftDao.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/Implementation/WorkerDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/Implementation/WorkerDao.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/Interfaces/IShiftDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/Interfaces/IShiftDao.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/Interfaces/IWorkerDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/Interfaces/IWorkerDao.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/entity/ShiftsEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/entity/ShiftsEntity.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/entity/WorkerEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/entity/WorkerEntity.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/test/ShiftDaoTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/test/ShiftDaoTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/test/WorkerDaoTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/test/WorkerDaoTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Database/util/EntityConverter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Database/util/EntityConverter.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/CreateShift.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/CreateShift.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/EditShift.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/EditShift.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/GetShiftById.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/GetShiftById.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/RemoveShift.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Shift/RemoveShift.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Worker/CreateWorker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Worker/CreateWorker.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Worker/GetWorkerById.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/Receiver/Channels/Worker/GetWorkerById.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Server/Receiver/Implementations/Sender.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/Receiver/Implementations/Sender.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -59,28 +45,42 @@
     </option>
   </component>
   <component name="ProjectId" id="2ILm9C34latHxp9CKPcMmBlvbRq" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="showLibraryContents" value="true" />
     <option name="showMembers" value="true" />
     <option name="showVisibilityIcons" value="true" />
     <option name="sortByType" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "project.structure.last.edited": "Problems",
-    "project.structure.proportion": "0.0",
-    "project.structure.side.proportion": "0.2",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Problems&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
-  <component name="RunManager" selected="Application.WorkerDaoTest">
+}</component>
+  <component name="RunManager" selected="Application.RunServer">
+    <configuration name="RunServer" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Server.RunServer" />
+      <module name="SEP3" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="Server.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="ShiftDaoTest" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Database.test.ShiftDaoTest" />
       <module name="SEP3" />
@@ -109,6 +109,7 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.RunServer" />
         <item itemvalue="Application.WorkerDaoTest" />
         <item itemvalue="Application.ShiftDaoTest" />
       </list>
@@ -117,7 +118,7 @@
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="8b797422-55a4-4c7b-bbd8-3d842e38230a" name="Changes" comment="" />
+      <changelist id="3cf24cbd-2f25-49c3-b1f4-7e01252d6f3b" name="Changes" comment="Fixed/Tested channel: &#10;1. CreateShift.java&#10;2. EditShift.java&#10;3. EditWorker.java&#10;4. CreateWorker.java&#10;5. RemoveShift.java&#10;6. RemoveWorker.java&#10;&#10;Added breakAmount to dao" />
       <created>1669969083755</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
@@ -125,6 +126,7 @@
       <workItem from="1669969085017" duration="24000" />
       <workItem from="1669969118683" duration="175000" />
       <workItem from="1669969296056" duration="1046000" />
+      <workItem from="1669975417152" duration="969000" />
     </task>
     <servers />
   </component>
